name: Test Dev

on:
  pull_request:
    branches:
      - develop
      - main
    paths:
      - 'apps/**'
      - 'libs/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/**'
      - 'IaC/**'

permissions:
  actions: read
  contents: read
  checks: write
  pull-requests: write

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env.outputs.env }}
    steps:
      - name: Set environment
        id: set-env
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "env=prod" >> "$GITHUB_OUTPUT"
          else
            echo "env=dev" >> "$GITHUB_OUTPUT"
          fi

  lint-test:
    needs: set-environment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Lint
        run: npx nx affected -t lint --base=origin/${{ github.base_ref }}

      - name: Test
        run: |
          npx nx affected -t test --base=origin/${{ github.base_ref }} --configuration=ci --coverage

      # - name: Upload coverage reports
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./coverage/apps/backend/lcov.info,./coverage/libs/api/*/lcov.info
      #     flags: backend
      #     fail_ci_if_error: true

  build:
    needs: [set-environment, lint-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build web app
        run: npx nx affected --base=origin/${{ github.base_ref }} -t export mobile -p web

      - name: Build backend
        run: npx nx affected --base=origin/${{ github.base_ref }} -t build --exclude=mobile

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: dist/apps/backend
          if-no-files-found: ignore

  IaC:
    needs: [set-environment, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="envs/${{ needs.set-environment.outputs.env }}/terraform.tfvars" -input=false
